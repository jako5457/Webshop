@page "/Product/{ProductId:int}"
@inject HttpClient client
@inject ILocalStorageService LocalStorage

@if (product != null)
{
    <div class="row">
        <div class="col-6">
            <ImageViewer ImageCount="@(product.ProductImages)" ProductId="@product.ProductId" />
        </div>
        <div class="col-6">
            <div class="card h-100">
                <div class="card-body">
                    <h1>@product.Name</h1>
                    <p>@product.Description</p>
                </div>
                <div class="card-footer"><h3>@product.Price Kr.</h3> <button @onclick="AddToBasket" class="btn btn-success"><i class="fas fa-shopping-basket"></i> Add to basket</button></div>
            </div>
        </div>
    </div>
}
else
{
    <LoadingComponent Text="Loading Product...."/>
}

@code {

    [CascadingParameter] public MainLayout MainLayout { get; set; }

    [Parameter]
    public int ProductId { get; set; }

    private ProductModel product { get; set; }

    protected async override Task OnInitializedAsync()
    {
        product = await client.GetFromJsonAsync<ProductModel>($"/api/product/{ProductId}");
        await base.OnInitializedAsync();
    }

    public async Task AddToBasket(MouseEventArgs e)
    {
        if (await LocalStorage.ContainKeyAsync("Basket"))
        {
            string basketString = await LocalStorage.GetItemAsStringAsync("Basket");

            var basket = basketString.ToBasketModels();

            var existing = basket.Where(b => b.ProductId == product.ProductId).FirstOrDefault();

            if (existing == null)
            {
                basket.Add(new BasketModel()
                {
                    ProductId = product.ProductId,
                    name = product.Name,
                    Price = product.Price
                });
            }
            else
            {
                int index = basket.IndexOf(existing);

                basket[index].Amount++;
            }

            await LocalStorage.SetItemAsStringAsync("Basket", basket.ToStorageString());
        }
        else
        {
            var basket = new List<BasketModel>();

            basket.Add(new BasketModel()
            {
                ProductId = product.ProductId,
                name = product.Name,
                Price = product.Price
            });

            await LocalStorage.SetItemAsStringAsync("Basket", basket.ToStorageString());
        }
        StateHasChanged();
        await MainLayout.Update();
    }
}
