// <auto-generated />
using Datalayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datalayer.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211031123633_update2")]
    partial class update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Datalayer.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Ole@eksample.dk",
                            FirstName = "Ole",
                            LastName = "Sigurd"
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.CustomerLocation", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("CustomerLocation");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            LocationId = 3
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "Hilmarfinsensgade 12",
                            City = "Sønderborg",
                            Country = "Denmark",
                            Zipcode = 6400
                        },
                        new
                        {
                            LocationId = 2,
                            Address = "Bredgade 33",
                            City = "Aabenraa",
                            Country = "Denmark",
                            Zipcode = 6200
                        },
                        new
                        {
                            LocationId = 3,
                            Address = "Landevejen 144",
                            City = "Aalborg",
                            Country = "Denmark",
                            Zipcode = 9029
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            Name = "Euc syd"
                        },
                        new
                        {
                            ManufacturerId = 2,
                            Name = "Aabenraa maskinfabrik"
                        },
                        new
                        {
                            ManufacturerId = 3,
                            Name = "Raspberrypi.dk"
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.ManufacturerLocation", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.HasKey("ManufacturerId", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("ManufacturerLocation");

                    b.HasData(
                        new
                        {
                            ManufacturerId = 1,
                            LocationId = 1
                        },
                        new
                        {
                            ManufacturerId = 2,
                            LocationId = 2
                        },
                        new
                        {
                            ManufacturerId = 3,
                            LocationId = 2
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            TotalPrice = 100.0
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "This product is 61% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 98",
                            Price = 310.19
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "This product is 72% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 12",
                            Price = 961.80999999999995
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "This product is 56% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 50",
                            Price = 140.25999999999999
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "This product is 12% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 29",
                            Price = 474.80000000000001
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "This product is 23% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 84",
                            Price = 437.16000000000003
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "This product is 2% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 56",
                            Price = 108.14
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "This product is 58% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 43",
                            Price = 914.90999999999997
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "This product is 97% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 22",
                            Price = 897.67999999999995
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "This product is 92% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 21",
                            Price = 909.90999999999997
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "This product is 56% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 81",
                            Price = 968.67999999999995
                        },
                        new
                        {
                            ProductId = 11,
                            Description = "This product is 12% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 40",
                            Price = 520.80999999999995
                        },
                        new
                        {
                            ProductId = 12,
                            Description = "This product is 24% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 80",
                            Price = 119.87
                        },
                        new
                        {
                            ProductId = 13,
                            Description = "This product is 92% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 64",
                            Price = 600.07000000000005
                        },
                        new
                        {
                            ProductId = 14,
                            Description = "This product is 57% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 14",
                            Price = 974.39999999999998
                        },
                        new
                        {
                            ProductId = 15,
                            Description = "This product is 45% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 58",
                            Price = 584.72000000000003
                        },
                        new
                        {
                            ProductId = 16,
                            Description = "This product is 4% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 48",
                            Price = 573.77999999999997
                        },
                        new
                        {
                            ProductId = 17,
                            Description = "This product is 71% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 73",
                            Price = 426.94
                        },
                        new
                        {
                            ProductId = 18,
                            Description = "This product is 95% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 41",
                            Price = 361.60000000000002
                        },
                        new
                        {
                            ProductId = 19,
                            Description = "This product is 28% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 71",
                            Price = 496.36000000000001
                        },
                        new
                        {
                            ProductId = 20,
                            Description = "This product is 56% better then the original",
                            Hidden = false,
                            ManufacturerId = 1,
                            Name = "Raspberry pi 40",
                            Price = 273.5
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            ProductImageId = 1,
                            ImageName = "Pi30",
                            ImagePath = "Pi2.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            ProductImageId = 2,
                            ImageName = "Pi29",
                            ImagePath = "Pi7.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            ProductImageId = 3,
                            ImageName = "Pi75",
                            ImagePath = "Pi5.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            ProductImageId = 4,
                            ImageName = "Pi73",
                            ImagePath = "Pi3.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            ProductImageId = 5,
                            ImageName = "Pi75",
                            ImagePath = "Pi7.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            ProductImageId = 6,
                            ImageName = "Pi37",
                            ImagePath = "Pi3.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            ProductImageId = 7,
                            ImageName = "Pi73",
                            ImagePath = "Pi1.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            ProductImageId = 8,
                            ImageName = "Pi91",
                            ImagePath = "Pi5.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            ProductImageId = 9,
                            ImageName = "Pi32",
                            ImagePath = "Pi6.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            ProductImageId = 10,
                            ImageName = "Pi84",
                            ImagePath = "Pi6.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            ProductImageId = 11,
                            ImageName = "Pi33",
                            ImagePath = "Pi4.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            ProductImageId = 12,
                            ImageName = "Pi2",
                            ImagePath = "Pi2.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            ProductImageId = 13,
                            ImageName = "Pi24",
                            ImagePath = "Pi2.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            ProductImageId = 14,
                            ImageName = "Pi77",
                            ImagePath = "Pi4.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            ProductImageId = 15,
                            ImageName = "Pi46",
                            ImagePath = "Pi7.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            ProductImageId = 16,
                            ImageName = "Pi21",
                            ImagePath = "Pi2.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            ProductImageId = 17,
                            ImageName = "Pi63",
                            ImagePath = "Pi2.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            ProductImageId = 18,
                            ImageName = "Pi53",
                            ImagePath = "Pi6.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            ProductImageId = 19,
                            ImageName = "Pi61",
                            ImagePath = "Pi1.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            ProductImageId = 20,
                            ImageName = "Pi32",
                            ImagePath = "Pi6.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            ProductImageId = 21,
                            ImageName = "Pi79",
                            ImagePath = "Pi3.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            ProductImageId = 22,
                            ImageName = "Pi57",
                            ImagePath = "Pi7.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            ProductImageId = 23,
                            ImageName = "Pi17",
                            ImagePath = "Pi3.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            ProductImageId = 24,
                            ImageName = "Pi6",
                            ImagePath = "Pi6.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            ProductImageId = 25,
                            ImageName = "Pi17",
                            ImagePath = "Pi3.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            ProductImageId = 26,
                            ImageName = "Pi15",
                            ImagePath = "Pi6.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            ProductImageId = 27,
                            ImageName = "Pi59",
                            ImagePath = "Pi7.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            ProductImageId = 28,
                            ImageName = "Pi28",
                            ImagePath = "Pi1.jpg",
                            ProductId = 20
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.ProductOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrder");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 14,
                            Amount = 0
                        });
                });

            modelBuilder.Entity("Datalayer.Entity.CustomerLocation", b =>
                {
                    b.HasOne("Datalayer.Entity.Customer", "Customer")
                        .WithMany("Locations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Datalayer.Entity.Location", "Location")
                        .WithMany("CustomerLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Datalayer.Entity.ManufacturerLocation", b =>
                {
                    b.HasOne("Datalayer.Entity.Location", "Location")
                        .WithMany("ManufacturerLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Datalayer.Entity.Manufacturer", "Manufacturer")
                        .WithMany("Locations")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Datalayer.Entity.Order", b =>
                {
                    b.HasOne("Datalayer.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Datalayer.Entity.Product", b =>
                {
                    b.HasOne("Datalayer.Entity.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Datalayer.Entity.ProductImage", b =>
                {
                    b.HasOne("Datalayer.Entity.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Datalayer.Entity.ProductOrder", b =>
                {
                    b.HasOne("Datalayer.Entity.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Datalayer.Entity.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Datalayer.Entity.Customer", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Datalayer.Entity.Location", b =>
                {
                    b.Navigation("CustomerLocations");

                    b.Navigation("ManufacturerLocations");
                });

            modelBuilder.Entity("Datalayer.Entity.Manufacturer", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Datalayer.Entity.Order", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Datalayer.Entity.Product", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("ProductOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
